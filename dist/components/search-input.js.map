{"version":3,"file":"search-input.js","sources":["../../src/components/search-input.hbs","../../src/components/search-input.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!-- template-lint-disable link-rel-noopener no-curly-component-invocation --}}\\n{{#if this.searchFunction}}\\n<input\\n  id=\\'search-input\\'\\n  type=\\'search\\'\\n  value={{this.value}}\\n    oninput={{perform this.search value=\\'target.value\\'}}\\n  placeholder=\\\"Search the guides\\\"\\n  autocomplete=\\\"off\\\"\\n>\\n\\n{{!-- Search results dropdown --}}\\n{{#ember-tether\\n  target=\\'#search-input\\'\\n  targetAttachment=\\'bottom right\\'\\n  attachment=\\'top right\\'\\n  constraints=this._resultTetherConstraints\\n  class=\\'ds-dropdown-results\\'\\n}}\\n  {{#if this.response.hits}}\\n    <span class=\\\"ds-suggestions ds-dropdown-menu\\\">\\n      <div class=\\\"ds-suggestion\\\">\\n        <div class=\\\"algolia-docsearch-suggestion algolia-docsearch-suggestion__main\\\">\\n          <div class=\\\"algolia-docsearch-suggestion--category-header\\\">\\n            <span class=\\\"algolia-docsearch-suggestion--category-header-lvl0\\\">\\n                Search Results\\n            </span>\\n          </div>\\n          <div class=\\\"algolia-docsearch-suggestion--wrapper\\\"></div>\\n        </div>\\n      </div>\\n      {{#each this.response.hits as |result|}}\\n        {{search-result result=result}}\\n      {{/each}}\\n      <div class=\\\"powered-by-algolia\\\">\\n        <a href=\\\"https://www.algolia.com/\\\" target=\\\"_blank\\\">\\n          <img src=\\\"/images/logos/search-by-algolia.svg\\\" alt=\\\"Search Powered by Algolia\\\">\\n        </a>\\n      </div>\\n    </span>\\n  {{/if}}\\n{{/ember-tether}}\\n{{/if}}\\n\")","/* eslint-disable ember/no-classic-components, ember/no-classic-classes, ember/require-tagless-components, prettier/prettier, ember/no-actions-hash */\nimport { getOwner } from '@ember/application';\nimport Component from '@ember/component';\nimport { set } from '@ember/object';\nimport { later } from '@ember/runloop';\nimport algoliasearch from 'algoliasearch';\nimport { task, timeout } from 'ember-concurrency';\n\nconst SEARCH_DEBOUNCE_PERIOD = 300;\n\nexport default Component.extend({\n  classNames: ['search-input'],\n\n  _resultTetherConstraints: Object.freeze([\n    {\n      to: 'window',\n      pin: ['left','right']\n    }\n  ]),\n\n  init() {\n    this._super(...arguments);\n    const config = getOwner(this).resolveRegistration('config:environment');\n\n    const { algoliaId, algoliaKey, indexName } = config['algolia'] || {};\n\n    if(algoliaId && algoliaKey && indexName) {\n      this.client = algoliasearch(algoliaId, algoliaKey);\n      this.index = this.client.initIndex(indexName);\n    }\n  },\n\n  search: task(function * (query) {\n    yield timeout(SEARCH_DEBOUNCE_PERIOD);\n\n    if(!query) {\n      return set(this, 'response', null);\n    }\n\n    const searchObj = {\n      hitsPerPage: 15,\n      query\n    };\n\n    if(this.projectVersion && this.projectVersion.match(/\\d+\\.\\d+\\.\\d+/)) {\n      searchObj.facetFilters = [[`version:${this.projectVersion}`]];\n    }\n\n    let res = yield this.index.search(searchObj);\n\n    return set(this, 'response', res);\n  }).restartable(),\n\n  actions: {\n    oninput(value) {\n      set(this, 'value', value);\n      if(value) {\n        this.search.perform(value);\n      }\n    },\n\n    onfocus() {\n      set(this, '_focused', true);\n    },\n\n    onblur() {\n      later(this, function () {\n        set(this, '_focused', false);\n      }, 200);\n    }\n\n  }\n});\n"],"names":["SEARCH_DEBOUNCE_PERIOD","setComponentTemplate","TEMPLATE","Component","extend","classNames","_resultTetherConstraints","Object","freeze","to","pin","init","_super","arguments","config","getOwner","resolveRegistration","algoliaId","algoliaKey","indexName","client","algoliasearch","index","initIndex","search","task","query","timeout","set","searchObj","hitsPerPage","projectVersion","match","facetFilters","res","restartable","actions","oninput","value","perform","onfocus","onblur","later"],"mappings":";;;;;;;;AACA,eAAe,kBAAkB,CAAC,y7CAAy7C;;ACD39C;AAQA,MAAMA,sBAAsB,GAAG,GAAG,CAAA;AAElC,kBAAAC,oBAAA,CAAAC,QAAA,EAAeC,SAAS,CAACC,MAAM,CAAC;EAC9BC,UAAU,EAAE,CAAC,cAAc,CAAC;AAE5BC,EAAAA,wBAAwB,EAAEC,MAAM,CAACC,MAAM,CAAC,CACtC;AACEC,IAAAA,EAAE,EAAE,QAAQ;AACZC,IAAAA,GAAG,EAAE,CAAC,MAAM,EAAC,OAAO,CAAA;AACtB,GAAC,CACF,CAAC;AAEFC,EAAAA,IAAIA,GAAG;AACL,IAAA,IAAI,CAACC,MAAM,CAAC,GAAGC,SAAS,CAAC,CAAA;IACzB,MAAMC,MAAM,GAAGC,QAAQ,CAAC,IAAI,CAAC,CAACC,mBAAmB,CAAC,oBAAoB,CAAC,CAAA;IAEvE,MAAM;MAAEC,SAAS;MAAEC,UAAU;AAAEC,MAAAA,SAAAA;AAAU,KAAC,GAAGL,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAA;AAEpE,IAAA,IAAGG,SAAS,IAAIC,UAAU,IAAIC,SAAS,EAAE;MACvC,IAAI,CAACC,MAAM,GAAGC,aAAa,CAACJ,SAAS,EAAEC,UAAU,CAAC,CAAA;MAClD,IAAI,CAACI,KAAK,GAAG,IAAI,CAACF,MAAM,CAACG,SAAS,CAACJ,SAAS,CAAC,CAAA;AAC/C,KAAA;GACD;AAEDK,EAAAA,MAAM,EAAEC,IAAI,CAAC,WAAYC,KAAK,EAAE;IAC9B,MAAMC,OAAO,CAAC3B,sBAAsB,CAAC,CAAA;IAErC,IAAG,CAAC0B,KAAK,EAAE;AACT,MAAA,OAAOE,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,CAAA;AACpC,KAAA;AAEA,IAAA,MAAMC,SAAS,GAAG;AAChBC,MAAAA,WAAW,EAAE,EAAE;AACfJ,MAAAA,KAAAA;KACD,CAAA;AAED,IAAA,IAAG,IAAI,CAACK,cAAc,IAAI,IAAI,CAACA,cAAc,CAACC,KAAK,CAAC,eAAe,CAAC,EAAE;MACpEH,SAAS,CAACI,YAAY,GAAG,CAAC,CAAE,CAAU,QAAA,EAAA,IAAI,CAACF,cAAe,CAAC,CAAA,CAAC,CAAC,CAAA;AAC/D,KAAA;IAEA,IAAIG,GAAG,GAAG,MAAM,IAAI,CAACZ,KAAK,CAACE,MAAM,CAACK,SAAS,CAAC,CAAA;AAE5C,IAAA,OAAOD,GAAG,CAAC,IAAI,EAAE,UAAU,EAAEM,GAAG,CAAC,CAAA;AACnC,GAAC,CAAC,CAACC,WAAW,EAAE;AAEhBC,EAAAA,OAAO,EAAE;IACPC,OAAOA,CAACC,KAAK,EAAE;AACbV,MAAAA,GAAG,CAAC,IAAI,EAAE,OAAO,EAAEU,KAAK,CAAC,CAAA;AACzB,MAAA,IAAGA,KAAK,EAAE;AACR,QAAA,IAAI,CAACd,MAAM,CAACe,OAAO,CAACD,KAAK,CAAC,CAAA;AAC5B,OAAA;KACD;AAEDE,IAAAA,OAAOA,GAAG;AACRZ,MAAAA,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,CAAA;KAC5B;AAEDa,IAAAA,MAAMA,GAAG;MACPC,KAAK,CAAC,IAAI,EAAE,YAAY;AACtBd,QAAAA,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAA;OAC7B,EAAE,GAAG,CAAC,CAAA;AACT,KAAA;AAEF,GAAA;AACF,CAAC,CAAC,CAAA;;;;"}